# OASIS_START
# DO NOT EDIT (digest: e5d91c7b6b370bf7e65dcd6628762206)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library merlin
"lib/merlin.cmxs": use_merlin
<lib/*.ml{,i,y}>: oasis_library_merlin_ccopt
"lib/time_stubs.c": oasis_library_merlin_ccopt
<lib/merlin.{cma,cmxa}>: oasis_library_merlin_cclib
"lib/libmerlin_stubs.lib": oasis_library_merlin_cclib
"lib/dllmerlin_stubs.dll": oasis_library_merlin_cclib
"lib/libmerlin_stubs.a": oasis_library_merlin_cclib
"lib/dllmerlin_stubs.so": oasis_library_merlin_cclib
<lib/merlin.{cma,cmxa}>: use_libmerlin_stubs
"lib/time_stubs.c": pkg_async
"lib/time_stubs.c": pkg_core
"lib/time_stubs.c": pkg_cstruct
"lib/time_stubs.c": pkg_dprle
"lib/time_stubs.c": pkg_frenetic
"lib/time_stubs.c": pkg_frenetic.async
"lib/time_stubs.c": pkg_ocamlgraph
"lib/time_stubs.c": pkg_sexplib
"lib/time_stubs.c": pkg_sexplib.syntax
"lib/time_stubs.c": pkg_str
"lib/time_stubs.c": pkg_threads
"lib/time_stubs.c": pkg_topology
# Executable wizard
"lib/Merlin.native": pkg_async
"lib/Merlin.native": pkg_core
"lib/Merlin.native": pkg_cstruct
"lib/Merlin.native": pkg_dprle
"lib/Merlin.native": pkg_frenetic
"lib/Merlin.native": pkg_frenetic.async
"lib/Merlin.native": pkg_ocamlgraph
"lib/Merlin.native": pkg_packet
"lib/Merlin.native": pkg_sexplib
"lib/Merlin.native": pkg_sexplib.syntax
"lib/Merlin.native": pkg_str
"lib/Merlin.native": pkg_threads
"lib/Merlin.native": pkg_topology
"lib/Merlin.native": use_merlin
<lib/*.ml{,i,y}>: pkg_async
<lib/*.ml{,i,y}>: pkg_core
<lib/*.ml{,i,y}>: pkg_cstruct
<lib/*.ml{,i,y}>: pkg_dprle
<lib/*.ml{,i,y}>: pkg_frenetic
<lib/*.ml{,i,y}>: pkg_frenetic.async
<lib/*.ml{,i,y}>: pkg_ocamlgraph
<lib/*.ml{,i,y}>: pkg_packet
<lib/*.ml{,i,y}>: pkg_sexplib
<lib/*.ml{,i,y}>: pkg_sexplib.syntax
<lib/*.ml{,i,y}>: pkg_str
<lib/*.ml{,i,y}>: pkg_threads
<lib/*.ml{,i,y}>: pkg_topology
<lib/*.ml{,i,y}>: use_merlin
# Executable unittest
"test/Test.native": pkg_async
"test/Test.native": pkg_core
"test/Test.native": pkg_cstruct
"test/Test.native": pkg_dprle
"test/Test.native": pkg_frenetic
"test/Test.native": pkg_frenetic.async
"test/Test.native": pkg_oUnit
"test/Test.native": pkg_ocamlgraph
"test/Test.native": pkg_pa_ounit
"test/Test.native": pkg_pa_ounit.syntax
"test/Test.native": pkg_packet
"test/Test.native": pkg_sexplib
"test/Test.native": pkg_sexplib.syntax
"test/Test.native": pkg_str
"test/Test.native": pkg_threads
"test/Test.native": pkg_topology
"test/Test.native": use_merlin
<test/*.ml{,i,y}>: pkg_async
<test/*.ml{,i,y}>: pkg_core
<test/*.ml{,i,y}>: pkg_cstruct
<test/*.ml{,i,y}>: pkg_dprle
<test/*.ml{,i,y}>: pkg_frenetic
<test/*.ml{,i,y}>: pkg_frenetic.async
<test/*.ml{,i,y}>: pkg_oUnit
<test/*.ml{,i,y}>: pkg_ocamlgraph
<test/*.ml{,i,y}>: pkg_pa_ounit
<test/*.ml{,i,y}>: pkg_pa_ounit.syntax
<test/*.ml{,i,y}>: pkg_packet
<test/*.ml{,i,y}>: pkg_sexplib
<test/*.ml{,i,y}>: pkg_sexplib.syntax
<test/*.ml{,i,y}>: pkg_str
<test/*.ml{,i,y}>: pkg_threads
<test/*.ml{,i,y}>: pkg_topology
<test/*.ml{,i,y}>: use_merlin
# OASIS_STOP
